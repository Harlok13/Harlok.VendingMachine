// <auto-generated />
using System;
using System.Collections.Generic;
using Harlok.VendingMachine.Domain.Primitives;
using Harlok.VendingMachine.Infrastructure.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Harlok.VendingMachine.Infrastructure.Migrations
{
    [DbContext(typeof(VendingMachineContext))]
    partial class VendingMachineContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Harlok.VendingMachine.Domain.Entities.Drink", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<short>("Amount")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("name");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("picture_url");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric(7, 2)")
                        .HasColumnName("price");

                    b.Property<long>("VendingMachineId")
                        .HasColumnType("bigint")
                        .HasColumnName("vending_machine_id");

                    b.Property<long>("vending_machine_fk")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .HasName("drink_pkey");

                    b.HasIndex("VendingMachineId");

                    b.HasIndex("vending_machine_fk");

                    b.ToTable("drink", (string)null);
                });

            modelBuilder.Entity("Harlok.VendingMachine.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UUID")
                        .HasColumnName("id");

                    b.Property<IReadOnlyCollection<Coin>>("Coins")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("coins");

                    b.HasKey("Id")
                        .HasName("user_pkey");

                    b.ToTable("user", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ac4b5436-1762-4a7e-8c8c-2073e7e2668d"),
                            Coins = new List<Coin>()
                        });
                });

            modelBuilder.Entity("Harlok.VendingMachine.Domain.Entities.VendingMachine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<IReadOnlyCollection<Coin>>("Deposit")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("deposit");

                    b.Property<decimal>("EarnedMoney")
                        .HasColumnType("numeric(7, 2)")
                        .HasColumnName("earned_money");

                    b.HasKey("Id")
                        .HasName("vending_machine_pkey");

                    b.ToTable("vending_machine", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 13L,
                            Deposit = new List<Coin>(),
                            EarnedMoney = 0m
                        });
                });

            modelBuilder.Entity("Harlok.VendingMachine.Domain.Entities.Drink", b =>
                {
                    b.HasOne("Harlok.VendingMachine.Domain.Entities.VendingMachine", null)
                        .WithMany("Drinks")
                        .HasForeignKey("VendingMachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Harlok.VendingMachine.Domain.Entities.VendingMachine", "VendingMachine")
                        .WithMany()
                        .HasForeignKey("vending_machine_fk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VendingMachine");
                });

            modelBuilder.Entity("Harlok.VendingMachine.Domain.Entities.VendingMachine", b =>
                {
                    b.Navigation("Drinks");
                });
#pragma warning restore 612, 618
        }
    }
}
